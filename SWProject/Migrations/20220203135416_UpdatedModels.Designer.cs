// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWProject;

#nullable disable

namespace SWProject.Migrations
{
    [DbContext(typeof(SWContext))]
    [Migration("20220203135416_UpdatedModels")]
    partial class UpdatedModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SWProject.Base", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AmmoSupplyId")
                        .HasColumnType("int");

                    b.Property<int?>("AttachedFleetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmmoSupplyId");

                    b.HasIndex("AttachedFleetId");

                    b.ToTable("Base");
                });

            modelBuilder.Entity("SWProject.BaseFleet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("VenatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VenatorId");

                    b.ToTable("Fleets");
                });

            modelBuilder.Entity("SWProject.Clone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BaseId")
                        .HasColumnType("int");

                    b.Property<string>("Equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LegionId")
                        .HasColumnType("int");

                    b.Property<int?>("LegionId1")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StarDestroyerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("LegionId");

                    b.HasIndex("LegionId1");

                    b.HasIndex("StarDestroyerId");

                    b.ToTable("Clones");
                });

            modelBuilder.Entity("SWProject.Droid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BaseId")
                        .HasColumnType("int");

                    b.Property<string>("Equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StarDestroyerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("StarDestroyerId");

                    b.ToTable("Droid");
                });

            modelBuilder.Entity("SWProject.Jedi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LegionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PadawanId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PadawanId")
                        .IsUnique()
                        .HasFilter("[PadawanId] IS NOT NULL");

                    b.ToTable("Jedies");
                });

            modelBuilder.Entity("SWProject.Legion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GeneralJediId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralJediId")
                        .IsUnique()
                        .HasFilter("[GeneralJediId] IS NOT NULL");

                    b.ToTable("Legions");
                });

            modelBuilder.Entity("SWProject.StarDestroyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeaponryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeaponryId");

                    b.ToTable("StarDestroyers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StarDestroyer");
                });

            modelBuilder.Entity("SWProject.StarshipWeaponry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LaserDoubleCannonCnt")
                        .HasColumnType("int");

                    b.Property<int>("LaserTargetDefenseCannonCnt")
                        .HasColumnType("int");

                    b.Property<int>("LaserTurretCnt")
                        .HasColumnType("int");

                    b.Property<int>("ProtonTorpedoLauncherCnt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StarshipWeaponries");
                });

            modelBuilder.Entity("SWProject.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartridgesCnt")
                        .HasColumnType("int");

                    b.Property<int>("FuelCnt")
                        .HasColumnType("int");

                    b.Property<int>("GrenadesCnt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("SWProject.AssaultShip", b =>
                {
                    b.HasBaseType("SWProject.StarDestroyer");

                    b.Property<int?>("BaseFleetId")
                        .HasColumnType("int");

                    b.HasIndex("BaseFleetId");

                    b.HasDiscriminator().HasValue("AssaultShip");
                });

            modelBuilder.Entity("SWProject.Base", b =>
                {
                    b.HasOne("SWProject.Supply", "AmmoSupply")
                        .WithMany()
                        .HasForeignKey("AmmoSupplyId");

                    b.HasOne("SWProject.BaseFleet", "AttachedFleet")
                        .WithMany("AttachedBases")
                        .HasForeignKey("AttachedFleetId");

                    b.Navigation("AmmoSupply");

                    b.Navigation("AttachedFleet");
                });

            modelBuilder.Entity("SWProject.BaseFleet", b =>
                {
                    b.HasOne("SWProject.StarDestroyer", "Venator")
                        .WithMany()
                        .HasForeignKey("VenatorId");

                    b.Navigation("Venator");
                });

            modelBuilder.Entity("SWProject.Clone", b =>
                {
                    b.HasOne("SWProject.Base", null)
                        .WithMany("Clones")
                        .HasForeignKey("BaseId");

                    b.HasOne("SWProject.Legion", "Legion")
                        .WithMany()
                        .HasForeignKey("LegionId");

                    b.HasOne("SWProject.Legion", null)
                        .WithMany("Clones")
                        .HasForeignKey("LegionId1");

                    b.HasOne("SWProject.StarDestroyer", null)
                        .WithMany("Passangers")
                        .HasForeignKey("StarDestroyerId");

                    b.Navigation("Legion");
                });

            modelBuilder.Entity("SWProject.Droid", b =>
                {
                    b.HasOne("SWProject.Base", null)
                        .WithMany("Droids")
                        .HasForeignKey("BaseId");

                    b.HasOne("SWProject.StarDestroyer", null)
                        .WithMany("Droids")
                        .HasForeignKey("StarDestroyerId");
                });

            modelBuilder.Entity("SWProject.Jedi", b =>
                {
                    b.HasOne("SWProject.Jedi", "Padawan")
                        .WithOne("Teacher")
                        .HasForeignKey("SWProject.Jedi", "PadawanId");

                    b.Navigation("Padawan");
                });

            modelBuilder.Entity("SWProject.Legion", b =>
                {
                    b.HasOne("SWProject.Jedi", "GeneralJedi")
                        .WithOne("Legion")
                        .HasForeignKey("SWProject.Legion", "GeneralJediId");

                    b.Navigation("GeneralJedi");
                });

            modelBuilder.Entity("SWProject.StarDestroyer", b =>
                {
                    b.HasOne("SWProject.StarshipWeaponry", "Weaponry")
                        .WithMany()
                        .HasForeignKey("WeaponryId");

                    b.Navigation("Weaponry");
                });

            modelBuilder.Entity("SWProject.AssaultShip", b =>
                {
                    b.HasOne("SWProject.BaseFleet", null)
                        .WithMany("Acclamators")
                        .HasForeignKey("BaseFleetId");
                });

            modelBuilder.Entity("SWProject.Base", b =>
                {
                    b.Navigation("Clones");

                    b.Navigation("Droids");
                });

            modelBuilder.Entity("SWProject.BaseFleet", b =>
                {
                    b.Navigation("Acclamators");

                    b.Navigation("AttachedBases");
                });

            modelBuilder.Entity("SWProject.Jedi", b =>
                {
                    b.Navigation("Legion");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SWProject.Legion", b =>
                {
                    b.Navigation("Clones");
                });

            modelBuilder.Entity("SWProject.StarDestroyer", b =>
                {
                    b.Navigation("Droids");

                    b.Navigation("Passangers");
                });
#pragma warning restore 612, 618
        }
    }
}
